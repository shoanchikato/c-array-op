name: build_release

on:
  workflow_call:
    inputs: {}

jobs:
  compile_build:
    name: "Build Static Library"
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux GCC
            os: ubuntu-latest
            compiler: gcc
            archive_ext: tar.gz

          - name: Linux Clang
            os: ubuntu-latest
            compiler: clang
            archive_ext: tar.gz

          - name: MacOS Clang
            os: macos-latest
            compiler: clang
            archive_ext: tar.gz

          - name: Windows MSVC
            os: windows-latest
            compiler: cl
            archive_ext: zip

    runs-on: ${{ matrix.os }}
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: "Enable MSVC command prompt"
        if: matrix.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1
        with: 
          arch: x86_64

      - name: "Build Static Library"
        run: |
          mkdir -p bin
          if [ "clang" == "cl" ]; then
            cl /Iinclude /c src/*.c /Fo:bin/ && lib /OUT:bin/libarray_op.lib bin/*.obj
          else
            clang -Wall -Iinclude -c src/*.c -o bin/libarray_op.o
            ar rcs bin/libarray_op.a bin/libarray_op.o
          fi

      - name: "Package Release Asset"
        run: |
          mkdir -p release
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            powershell Compress-Archive -Path bin\\* -DestinationPath release\\libarray_op_${{ matrix.name }}.${{ matrix.archive_ext }}
          else
            tar -czvf release/libarray_op_${{ matrix.name }}.${{ matrix.archive_ext }} -C bin .
          fi

      - name: "Upload Release Asset"
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: release/libarray_op_${{ matrix.name }}.${{ matrix.archive_ext }}
          asset_name: libarray_op_${{ matrix.name }}.${{ matrix.archive_ext }}
          overwrite: true

